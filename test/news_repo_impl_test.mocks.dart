// Mocks generated by Mockito 5.4.4 from annotations
// in news_flutter_data_newsapi/test/news_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:either_dart/either.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:news_flutter_data_newsapi/api_service.dart' as _i2;
import 'package:news_flutter_data_newsapi/news_repo_impl.dart' as _i3;
import 'package:news_flutter_domain/errors/base_error.dart' as _i8;
import 'package:news_flutter_domain/model/news_model.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsApiRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsApiRepoImpl extends _i1.Mock implements _i3.NewsApiRepoImpl {
  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);

  @override
  _i5.Future<_i6.Either<List<_i7.NewsModel>, _i8.BaseError>> getNews() => (super.noSuchMethod(
        Invocation.method(
          #getNews,
          [],
        ),
        returnValue: _i5.Future<_i6.Either<List<_i7.NewsModel>, _i8.BaseError>>.value(_i4.dummyValue<_i6.Either<List<_i7.NewsModel>, _i8.BaseError>>(
          this,
          Invocation.method(
            #getNews,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i6.Either<List<_i7.NewsModel>, _i8.BaseError>>.value(_i4.dummyValue<_i6.Either<List<_i7.NewsModel>, _i8.BaseError>>(
          this,
          Invocation.method(
            #getNews,
            [],
          ),
        )),
      ) as _i5.Future<_i6.Either<List<_i7.NewsModel>, _i8.BaseError>>);
}
